{"version":3,"sources":["../src/index.js"],"names":["styledProps","styledThemeProps","styledMappedProps","ERROR_PREFIX","map","fallbackValueKey","PRODUCTION","process","env","NODE_ENV","styleToApplyFromProps","Object","keys","filter","props","hasOwnProperty","key","length","Error","join","styleValueToApply","shift","fallbackStyleToApply","undefined","themeMapKey","mapFromTheme","theme","Array","obj","methodToUse","reduce","mapped","styledMappedThemeProps"],"mappings":";;;;;;;;QAWgBA,W,GAAAA,W;QAiCAC,gB,GAAAA,gB;QAoBAC,iB,GAAAA,iB;AAhEhB;;;AAGA,IAAMC,eAAe,2BAArB;;AAEA;;;;;;AAMO,SAASH,WAAT,CAAqBI,GAArB,EAA0BC,gBAA1B,EAA4C;AACjD,SAAO,iBAAS;AACd,QAAMC,aAAcC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7C;AAAA,QACMC,wBAAwBC,OAAOC,IAAP,CAAYR,GAAZ,EAAiBS,MAAjB,CAAwB;AAAA,aAAQC,MAAMC,cAAN,CAAqBC,GAArB,KAA6BF,MAAME,GAAN,CAArC;AAAA,KAAxB,CAD9B;;AAGA,QAAIN,sBAAsBO,MAA1B,EAAkC;AAChC,UAAIP,sBAAsBO,MAAtB,GAA+B,CAA/B,IAAoC,CAACX,UAAzC,EACE,MAAM,IAAIY,KAAJ,CAAaf,YAAb,kFAAsGO,sBAAsBS,IAAtB,CAA2B,IAA3B,CAAtG,OAAN;;AAEF,UAAMC,oBAAoBhB,IAAIM,sBAAsBW,KAAtB,EAAJ,CAA1B;;AAEA,UAAID,iBAAJ,EAAuB,OAAOA,iBAAP;AACxB;;AAED,QAAIf,gBAAJ,EAAsB;AACpB,UAAMiB,uBAAwBjB,oBAAoBS,MAAMT,gBAAN,CAApB,IAA+CD,IAAIW,cAAJ,CAAmBD,MAAMT,gBAAN,CAAnB,CAA/C,GAA6FD,IAAIU,MAAMT,gBAAN,CAAJ,CAA7F,GAA4HkB,SAA1J;;AAEA,UAAI,CAACD,oBAAD,IAAyB,CAAChB,UAA9B,EACE,MAAM,IAAIY,KAAJ,CAAaf,YAAb,8CAAkEE,gBAAlE,QAAN;;AAEF,aAAOiB,oBAAP;AACD;;AAED,WAAOC,SAAP;AACD,GAvBD;AAwBD;;AAED;;;;;;AAMO,SAAStB,gBAAT,CAA0BuB,WAA1B,EAAuCnB,gBAAvC,EAAyD;AAC9D,SAAO,iBAAS;AACd,QAAMC,aAAcC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7C;AAAA,QACMgB,eAAiBX,MAAMY,KAAN,IAAeZ,MAAMY,KAAN,CAAYX,cAAZ,CAA2BS,WAA3B,CAAhB,GAA2DV,MAAMY,KAAN,CAAYF,WAAZ,CAA3D,GAAsF,IAD5G;;AAGA,QAAI,CAACC,YAAD,IAAiB,CAACnB,UAAtB,EACE,MAAM,IAAIY,KAAJ,CAAaf,YAAb,qCAAyDqB,WAAzD,iDAAN;;AAEF,QAAK,QAAOC,YAAP,yCAAOA,YAAP,OAAwB,QAAzB,IAAsC,EAAEA,wBAAwBE,KAA1B,CAA1C,EACE,OAAO3B,YAAYyB,YAAZ,EAA0BpB,gBAA1B,CAAP;;AAEF,WAAOkB,SAAP;AACD,GAXD;AAYD;;AAED;;;;;AAKO,SAASrB,iBAAT,CAA2B0B,GAA3B,EAAgC;AACrC,MAAMC,cAAgB,OAAOD,GAAP,KAAe,QAAhB,GAA4B3B,gBAA5B,GAA+CD,WAApE;;AAEA,SAAOW,OAAOC,IAAP,CAAYgB,GAAZ,EAAiBE,MAAjB,CAAwB,UAACC,MAAD,EAASf,GAAT,EAAiB;AAC9C,QAAMZ,MAAMwB,IAAIZ,GAAJ,CAAZ;;AAEA,QAAIZ,OAAQ,QAAOA,GAAP,yCAAOA,GAAP,OAAe,QAAvB,IAAoC,EAAEA,eAAeuB,KAAjB,CAAxC,EACEI,OAAOf,GAAP,IAAca,YAAYD,IAAIZ,GAAJ,CAAZ,EAAsBA,GAAtB,CAAd;;AAEF,WAAOe,MAAP;AACD,GAPM,EAOJ,EAPI,CAAP;AAQD;;QAE6BC,sB,GAArB9B,iB;kBAEMF,W","file":"index.js","sourcesContent":["/**\n * Prefix used when throwing Errors whilst running in development mode\n */\nconst ERROR_PREFIX = '[styled-props-simplified]';\n\n/**\n * Sets the value of your styled component property from a map object depending on a prop match hassle-free.\n *\n * @param {object} map the map to apply the style value from when checking for props\n * @param {string} fallbackValueKey fallback map key value to use if an invalid value gets matched from the map\n */\nexport function styledProps(map, fallbackValueKey) {\n  return props => {\n    const PRODUCTION = (process.env.NODE_ENV === 'production'),\n          styleToApplyFromProps = Object.keys(map).filter(key => (props.hasOwnProperty(key) && props[key]));\n\n    if (styleToApplyFromProps.length) {\n      if (styleToApplyFromProps.length > 1 && !PRODUCTION)\n        throw new Error(`${ERROR_PREFIX} You are trying to provide multiple props to an element at the same time: ${styleToApplyFromProps.join(', ')}.`);\n\n      const styleValueToApply = map[styleToApplyFromProps.shift()];\n\n      if (styleValueToApply) return styleValueToApply;\n    }\n\n    if (fallbackValueKey) {\n      const fallbackStyleToApply = (fallbackValueKey && props[fallbackValueKey] && map.hasOwnProperty(props[fallbackValueKey]) ? map[props[fallbackValueKey]] : undefined);\n\n      if (!fallbackStyleToApply && !PRODUCTION)\n        throw new Error(`${ERROR_PREFIX} Invalid fallback value provided for \"${fallbackValueKey}\".`);\n\n      return fallbackStyleToApply;\n    }\n\n    return undefined;\n  };\n}\n\n/**\n * Sets the value of your styled component property from a map object located in your theme depending on a prop match hassle-free.\n *\n * @param {string} themeMapKey the key of the map inside your theme object, used to apply the style value from when checking for props\n * @param {*} fallbackValueKey fallback value to use if an invalid value gets matched from the map\n */\nexport function styledThemeProps(themeMapKey, fallbackValueKey) {\n  return props => {\n    const PRODUCTION = (process.env.NODE_ENV === 'production'),\n          mapFromTheme = ((props.theme && props.theme.hasOwnProperty(themeMapKey)) ? props.theme[themeMapKey] : null);\n\n    if (!mapFromTheme && !PRODUCTION)\n      throw new Error(`${ERROR_PREFIX} Invalid theme key provided \"${themeMapKey}\" or theme does not exist for this element.`);\n\n    if ((typeof mapFromTheme === 'object') && !(mapFromTheme instanceof Array))\n      return styledProps(mapFromTheme, fallbackValueKey);\n\n    return undefined;\n  };\n}\n\n/**\n * Maps all object properties that contain valid maps to styledProps/styledThemeProps\n *\n * @param {object|string} obj object whose map containing properties to flatten to a styled object or the string key inside your theme object\n */\nexport function styledMappedProps(obj) {\n  const methodToUse = ((typeof obj === 'string') ? styledThemeProps : styledProps);\n\n  return Object.keys(obj).reduce((mapped, key) => {\n    const map = obj[key];\n\n    if (map && (typeof map === 'object') && !(map instanceof Array))\n      mapped[key] = methodToUse(obj[key], key);\n\n    return mapped;\n  }, {})\n}\n\nexport { styledMappedProps as styledMappedThemeProps };\n\nexport default styledProps;\n"]}